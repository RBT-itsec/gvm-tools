# -*- coding: utf-8 -*-
# Description:
# Script for gvm-pyshell
#
# Authors:
# Joshua Schwartz <joshua.schwartz@greenbone.net>
#
# Copyright:
# Copyright (C) 2018 Greenbone Networks GmbH
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import random as r

len_args = len(args.script) - 1
if len_args < 2:
    message = """
    This script generates random task data and feeds it to\
a desired GSM
    It needs two parameters after the script name.

    1. <host_number> --number of dummy hosts to select from
    2. <number> --number of targets to be generated

    In addition, if you would like for the number of targets generated
to be randomized on a Gaussian distribution, add 'with-gauss'

    Example:
        $ gvm-pyshell ssh --hostname=hostname --gmp-username=name \
--gmp-password=pass scripts/gen-random-tasks.gmp 3 40 with-gauss
    """
    print(message)
    quit()


def rand_number():
    return r.randrange(256)


def n_IP(number_of_IPs):
    list_of_IPs = []
    for i in range(number_of_IPs):
        list_of_IPs.append('{}.{}.{}.{}'.format(
            rand_number(),
            rand_number(),
            rand_number(),
            rand_number()
            ))
    return list_of_IPs


def generate(n_targets, n_IPs):
    IPs = n_IP(n_IPs)

    if 'with-gauss' in args.script:
        n_targets = int(r.gauss(n_targets, 2))

    for i in range(n_targets):
        host_ip = r.choice(IPs)
        index = '{{0:0>{}}}'.format(len(str(n_targets)))
        name = 'Target_{}'.format(index.format(i+1))

        gmp.create_target(
            name=name,
            make_unique=True,
            hosts=host_ip
            )


host_number = int(args.script[1])
number_targets = int(args.script[2])

print('Generating random targets...')
generate(number_targets, host_number)
